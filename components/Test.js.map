{"version":3,"sources":["Test.es6"],"names":[],"mappings":";;;;;QAEgB;;AAFhB;;;;;;AAEO,SAAS,YAAT,GAAwB;AAC3B,QAAI,YAAY,IAAI,gBAAM,SAAN,EAAhB,CADuB;AAE3B,cAAU,WAAV,GAAwB;sDAAxB;;;AAF2B,aAM3B,CAAU,OAAV,CAAkB,GAAlB,CAAsB,IAAtB,EAA4B,EAAE,UAAU,KAAV,EAA9B,EAAiD,UAAS,KAAT,EAAgB,OAAhB,EAAyB;AACtE,gBAAQ,KAAR;AACI,iBAAK,MAAL;;;AAGI,uBAAO,UAAU,QAAV,CAAmB,GAAnB,CAAuB,IAAvB,CAA4B,OAA5B,CAAP,CAHJ;AADJ,iBAKS,YAAL;;AAEI,uBAAO,UAAU,QAAV,CAAmB,GAAnB,CAAuB,UAAvB,EAAP,CAFJ;AALJ,SADsE;KAAzB,CAAjD,CAN2B;AAiB3B,cAAU,QAAV,CAAmB,GAAnB,CAAuB,KAAvB,EAA8B,EAAE,UAAU,KAAV,EAAhC,EAjB2B;;AAmB3B,WAAO,SAAP;AAnB2B,CAAxB","file":"Test.js","sourcesContent":["import noflo from 'noflo'\n\nexport function getComponent() {\n    var component = new noflo.Component\n    component.description = \"This component receives data on a single input\\\n  port and sends the same data out to the output port\"\n\n    // Register ports and event handlers\n    component.inPorts.add('in', { datatype: 'all' }, function(event, payload) {\n        switch (event) {\n            case 'data':\n                // Forward data when we receive it.\n                // Note: send() will connect automatically if needed\n                return component.outPorts.out.send(payload)\n            case 'disconnect':\n                // Disconnect output port when input port disconnects\n                return component.outPorts.out.disconnect()\n        }\n    })\n    component.outPorts.add('out', { datatype: 'all' })\n\n    return component // Return new instance\n}"]}